#!/usr/bin/env bash

ROOT=$(
    cd "$(dirname "$0")"
    pwd
)

PREFIX="${ROOT}/src/build"
TOOLS="${ROOT}/tools"
BUILD="${TOOLS}/build"
SE2="${TOOLS}/se2"
IGRAPH="${SE2}/vendor/igraph"

if [ -z "$R_HOME" ]; then
    echo "could not determine R_HOME"
    exit 1
fi

# Otherwise, R will echo a warning about ignoring R_HOME that gets included in
# the variable assignment.
R="${R_HOME}/bin/R"
Rscript="${R_HOME}/bin/Rscript"
unset R_HOME

i_CMAKE_INCLUDE_DIRS="$("$Rscript" "${ROOT}/tools/find_linkingto_deps.R")"
i_CMAKE_INCLUDE_DIRS="$i_CMAKE_INCLUDE_DIRS;$("$R" CMD config --cppflags | sed -n s/-I//p)"
i_CMAKE_CC=$("$R" CMD config CC)
i_CMAKE_CFLAGS=$("$R" CMD config CFLAGS)
AR=$("$R" CMD config AR)
RANLIB=$("$R" CMD config RANLIB)

if [ "$(which ninja)" ]; then
    GENERATOR="Ninja"
else
    GENERATOR="Unix Makefiles"
fi

if [ -z "$DEVELOP" ]; then
    DEVELOP=0
fi

cp "${ROOT}/tools/IGRAPH_VERSION" "${IGRAPH}"
cp "${ROOT}/tools/SE2_VERSION" "${SE2}"

[ -d "${BUILD}" ] || cmake \
    -S "${TOOLS}" \
    -B "${BUILD}" \
    -D CMAKE_PACKAGE_VERSION="$(cat "${SE2}/SE2_VERSION")" \
    -D CMAKE_C_COMPILER="$i_CMAKE_CC" \
    -D CMAKE_C_FLAGS="$i_CMAKE_CFLAGS" \
    -D R_INCLUDE_DIRS="$i_CMAKE_INCLUDE_DIRS" \
    -D DEVELOP="$DEVELOP" \
    -G "$GENERATOR" \
    --install-prefix="$PREFIX"

cmake --build "${BUILD}" --target install
"$AR" -cr "${PREFIX}/lib64/libse2.a" "${PREFIX}"/objects/SpeakEasy2/*.o
"$RANLIB" "${PREFIX}/lib64/libse2.a"

cat <<_EOF_ >"${ROOT}/src/Makevars"
PKG_CFLAGS = \$(C_VISIBILITY)
PKG_CPPFLAGS = -I${PREFIX}/include/igraph -I${PREFIX}/include
PKG_LIBS = ${PREFIX}/lib64/libse2.a ${PREFIX}/lib64/libigraph.a
_EOF_
