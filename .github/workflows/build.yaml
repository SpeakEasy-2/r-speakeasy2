name: Build packages

on:
  - workflow_call

permissions:
  checks: write
  contents: write
  pull-requests: write

jobs:
  build-linux:
    name: Build Linux toolbox
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - {r: 'release'}
          - {r: 'devel', http-user-agent: 'release'}
          - {r: 'oldrel-1'}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Clone igraph
        run: |
          cd tools/se2
          git submodule init
          git submodule update --recursive

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade
          sudo apt install cmake ninja-build gcc g++ libxml2-dev libbison-dev libfl-dev

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Build from source
        run: |
          R CMD build .
          mv speakeasyR-*.tar.gz speakeasyR-${{ github.ref }}-${{ runner.os }}-${{ matrix.config.r }}.tar.gz

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speakeasyR-${{ runner.os }}-${{ matrix.config.r }}-${{ github.sha }}
          path: build/

  build-windows:
    name: Build Windows toolbox
    runs-on: windows-latest

    defaults:
      run:
        shell:  msys2 {0}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Install packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          install: >-
            git
            bison
            flex
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-toolchain
            mingw-w64-ucrt-x86_64-libxml2
          update: true
          location: D:\

      - name: Clone igraph
        run: |
          cd tools/se2
          git submodule init
          git submodule update --recursive

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Build from source
        run: |
          R CMD build .
          mv speakeasyR-*.tar.gz speakeasyR-${{ github.ref }}-${{ runner.os }}-release.tar.gz

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speakeasyR-${{ runner.os }}-release-${{ github.sha }}
          path: build/

  build-macos:
    name: Build macOS toolbox
    runs-on: macos-latest
    # Use system Clang (supports openmp) instead of XCode Clang.
    # See https://gist.github.com/svenevs/f00ed3898d2af6248921b63254aa8cc1
    env:
      CC: /usr/bin/clang
      CXX: /usr/bin/clang++
      CPPFLAGS: "-Xpreprocessor -fopenmp"
      CFLAGS: "-I/usr/local/opt/libomp/include"
      CXXFLAGS: "-I/usr/local/opt/libomp/include"
      LDFLAGS: "-Wl,-rpath,/usr/local/opt/libomp/lib -L/usr/local/opt/libomp/lib -lomp"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Clone igraph
        run: |
          cd tools/se2
          git submodule init
          git submodule update --recursive

      - name: Install dependencies
        run: brew install ninja autoconf automake libtool libomp

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Build from source
        run: |
          R CMD build .
          mv speakeasyR-*.tar.gz speakeasyR-${{ github.ref }}-${{ runner.os }}-release.tar.gz

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: speakeasyR-${{ runner.os }}-release-${{ github.sha }}
          path: build/
